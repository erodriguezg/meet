{
    "swagger": "2.0",
    "info": {
        "description": "Api for meet application.",
        "title": "meet API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/v1/buy-pack/capture-payment": {
            "post": {
                "description": "Capture a Payment to a Pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuyPack"
                ],
                "summary": "Capture Pack Payment",
                "parameters": [
                    {
                        "description": "Capture Payment Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.BuyPackCapturePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/buy-pack/create-order": {
            "post": {
                "description": "Generate a new order for buy a pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuyPack"
                ],
                "summary": "Create Buy Pack Order",
                "parameters": [
                    {
                        "description": "Create Order Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.BuyPackCreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.BuyPackCreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/buy-pack/detail": {
            "post": {
                "description": "Get info required for buy the pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuyPack"
                ],
                "summary": "Get Buy Pack Details",
                "parameters": [
                    {
                        "description": "details buy pack dto",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.BuyPackDetailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PackBuyDetailDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/buy-pack/info": {
            "get": {
                "description": "Get config client data for payment system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuyPack"
                ],
                "summary": "Get Payment Client Data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/chili-bank/banks": {
            "get": {
                "description": "Get Chili Banks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chili Bank"
                ],
                "summary": "Get Banks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/chili-bank/{modelNickname}/accounts": {
            "post": {
                "description": "Insert or update a chili bank account for the model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chili Bank"
                ],
                "summary": "Save Model Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The chili bank account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChiliBankAccountDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-dto_ChiliBankAccountDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/chili-bank/{modelNickname}/{accountId}": {
            "delete": {
                "description": "Delete a chili bank account of the model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chili Bank"
                ],
                "summary": "Delete Model Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chili bank account id",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The chili bank account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChiliBankAccountDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/file/confirm/{hash}": {
            "post": {
                "description": "Confirm the file was uploaded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Confirm File Uploaded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique hash for the file",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/file/get/{hash}": {
            "get": {
                "description": "Get the download url from hash",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get Download Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique hash for the file",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/file/redirect/{hash}": {
            "get": {
                "description": "Redirect for download the file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Redirect To File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique hash for the file",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Moved Permanently",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/file/storage-type": {
            "get": {
                "description": "Get the storage type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get Storage Type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/health-check": {
            "get": {
                "description": "Health Check Api Method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/prepare-upload-item": {
            "post": {
                "description": "Prepare the upload for an item of one pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Prepare Upload Pack Item",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PrepareUploadPackItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_ResourceUploadUrlDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/publish": {
            "post": {
                "description": "Publish the pack ready for consumers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Publish Pack",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PackDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/ready-to-publish": {
            "post": {
                "description": "Ready to publish the pack for moderators / admin revision",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Ready To Publish Pack",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PackDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}": {
            "get": {
                "description": "Get all the packs from one model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get Packs From Model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_PackDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/new": {
            "put": {
                "description": "Create a new pack for model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Create New Pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-dto_PackDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}": {
            "delete": {
                "description": "Delete one pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Delete Pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pack number",
                        "name": "packNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}/description": {
            "post": {
                "description": "Edit the pack description by the model or admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Edit Pack Description",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.EditPackDescriptionDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}/info": {
            "get": {
                "description": "Get information about the pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get Pack Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pack number",
                        "name": "packNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_PackInfoDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}/items": {
            "get": {
                "description": "Get all active items from the pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get Items From Pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pack number",
                        "name": "packNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_PackItemDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}/title": {
            "post": {
                "description": "Edit the pack title by the model or admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Edit Pack Title",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.EditPackTitleDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/pack/{modelNickName}/{packNumber}/{packItem}": {
            "delete": {
                "description": "Delete a item of one Pack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Delete Pack Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model nickname",
                        "name": "modelNickName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pack number",
                        "name": "packNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "item number on the pack",
                        "name": "packItem",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/person/all": {
            "get": {
                "description": "Get all persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Find All Persons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_domain_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/person/filter": {
            "get": {
                "description": "Search persons filtered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Filter Persons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of person",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rut of person",
                        "name": "rut",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text search on names",
                        "name": "nameLike",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_domain_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/person/save": {
            "post": {
                "description": "Insert or update a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Save Person",
                "parameters": [
                    {
                        "description": "The input person",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-domain_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/person/{uuid}": {
            "get": {
                "description": "Find person by uuid id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Find By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of person",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-domain_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete one person by his uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Delete Person By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of person",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/profile/all": {
            "get": {
                "description": "Get all profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Find All Profiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_domain_Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/all": {
            "get": {
                "description": "Find all rooms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Find All Rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_RoomDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/expired": {
            "delete": {
                "description": "Delete expired rooms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Delete Expired Rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/new": {
            "post": {
                "description": "Create New Room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Create Room",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRoomDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-dto_RoomDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/owned": {
            "get": {
                "description": "Find owned rooms (by identity)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Find Owned Rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-array_dto_RoomDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/visibility": {
            "post": {
                "description": "Change visibility room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Change Visibility Room",
                "parameters": [
                    {
                        "description": "Payload Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeRoomVisibilityRoomDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-dto_RoomDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/room/{hash}": {
            "get": {
                "description": "Find one room by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Find Room By Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash of room",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-dto_RoomDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Delete Room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash of room",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/security/identity": {
            "get": {
                "description": "Get the authenticated identity",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get Identity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ApiResponse-fiberidentity_FiberIdentity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/security/login-url": {
            "get": {
                "description": "Get the login url of the sso",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get Login Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "state from frontend",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/security/redirect-to-openid-login-url": {
            "get": {
                "description": "Redirect To OpenId Login Url",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Redirect To Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "state from frontend",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Moved Permanently",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/security/token": {
            "post": {
                "description": "Get the token from OpenId Response Data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code from openid",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state from openid",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Person": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "profileCode": {
                    "type": "integer"
                }
            }
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissionsCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.ChangeRoomVisibilityRoomDTO": {
            "type": "object",
            "properties": {
                "newAnonymousAccess": {
                    "type": "boolean"
                },
                "roomHash": {
                    "type": "string"
                }
            }
        },
        "dto.ChiliBankAccountDTO": {
            "type": "object",
            "required": [
                "accountNumber",
                "accountType",
                "bankName",
                "holderName",
                "rut"
            ],
            "properties": {
                "accountNumber": {
                    "type": "integer",
                    "maximum": 30
                },
                "accountType": {
                    "type": "string",
                    "maxLength": 50
                },
                "bankName": {
                    "type": "string",
                    "maxLength": 255
                },
                "holderName": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "string",
                    "maxLength": 255
                },
                "rut": {
                    "type": "integer",
                    "maximum": 10
                }
            }
        },
        "dto.CreateRoomDTO": {
            "type": "object",
            "properties": {
                "anonymousAccess": {
                    "type": "boolean"
                },
                "ownerPersonId": {
                    "type": "string"
                }
            }
        },
        "dto.PackBuyDetailDto": {
            "type": "object",
            "properties": {
                "modelNickName": {
                    "type": "string"
                },
                "packDollarValue": {
                    "type": "number"
                },
                "packTitle": {
                    "type": "string"
                }
            }
        },
        "dto.PackDto": {
            "type": "object",
            "properties": {
                "coverImageFileHash": {
                    "type": "string"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "packNumber": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.PackInfoDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.PackItemDto": {
            "type": "object",
            "properties": {
                "isLocked": {
                    "type": "boolean"
                },
                "itemNumber": {
                    "type": "integer"
                },
                "resourceFileHash": {
                    "type": "string"
                },
                "thumbnailFileHash": {
                    "type": "string"
                },
                "typeCode": {
                    "type": "string"
                }
            }
        },
        "dto.ResourceUploadUrlDto": {
            "type": "object",
            "properties": {
                "fileHash": {
                    "type": "string"
                },
                "isBlurred": {
                    "type": "boolean"
                },
                "isThumbnail": {
                    "type": "boolean"
                },
                "uploadUrl": {
                    "type": "string"
                }
            }
        },
        "dto.RoomDTO": {
            "type": "object",
            "properties": {
                "anonymousAccess": {
                    "type": "boolean"
                },
                "creationDate": {
                    "type": "string"
                },
                "lastInteractionDate": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/dto.RoomOwnerDTO"
                },
                "roomHash": {
                    "type": "string"
                }
            }
        },
        "dto.RoomOwnerDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "personId": {
                    "type": "string"
                }
            }
        },
        "fiberidentity.FiberIdentity": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "permissionsCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "personId": {
                    "type": "string"
                },
                "profileCode": {
                    "type": "integer"
                },
                "profileName": {
                    "type": "string"
                }
            }
        },
        "handler.BuyPackCapturePaymentRequest": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "string"
                }
            }
        },
        "handler.BuyPackCreateOrderRequest": {
            "type": "object",
            "properties": {
                "modelNickName": {
                    "type": "string"
                },
                "packNumber": {
                    "type": "integer"
                },
                "personId": {
                    "type": "string"
                }
            }
        },
        "handler.BuyPackCreateOrderResponse": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "string"
                }
            }
        },
        "handler.BuyPackDetailsRequest": {
            "type": "object",
            "properties": {
                "modelNickName": {
                    "type": "string"
                },
                "packNumber": {
                    "type": "integer"
                }
            }
        },
        "handler.EditPackDescriptionDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 280
                }
            }
        },
        "handler.EditPackTitleDto": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "handler.PackDto": {
            "type": "object",
            "properties": {
                "modelNickName": {
                    "type": "string"
                },
                "packNumber": {
                    "type": "integer"
                }
            }
        },
        "handler.PrepareUploadPackItemDto": {
            "type": "object",
            "properties": {
                "isPublic": {
                    "type": "boolean"
                },
                "modelNickName": {
                    "type": "string"
                },
                "packNumber": {
                    "type": "integer"
                },
                "typeCode": {
                    "type": "string"
                }
            }
        },
        "rest.ApiErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_domain_Person": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Person"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_domain_Profile": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Profile"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_dto_PackDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PackDto"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_dto_PackInfoDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PackInfoDto"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_dto_PackItemDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PackItemDto"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_dto_ResourceUploadUrlDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ResourceUploadUrlDto"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_dto_RoomDTO": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoomDTO"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-array_string": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-domain_Person": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "$ref": "#/definitions/domain.Person"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-dto_ChiliBankAccountDTO": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "$ref": "#/definitions/dto.ChiliBankAccountDTO"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-dto_PackDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "$ref": "#/definitions/dto.PackDto"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-dto_RoomDTO": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "$ref": "#/definitions/dto.RoomDTO"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-fiberidentity_FiberIdentity": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "$ref": "#/definitions/fiberidentity.FiberIdentity"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ApiResponse-string": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rest.ApiErrorDetail"
                },
                "payload": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}